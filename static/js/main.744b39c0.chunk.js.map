{"version":3,"sources":["components/SimpleChart/SimpleChart.tsx","data/data.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SimpleChart","positions","title","ratio","maxHeightOfBarsInPx","arr","res","forEach","item","score","findTopScore","className","length","map","i","style","height","name","dataLong","dataShort","dataEmpty","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA0CeA,EA/BkC,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,MAYnDC,EAZmF,EAAzBC,oBAG3C,SAACC,GAClB,IAAIC,EAAa,EAIjB,OAHAD,EAAIE,SAAQ,SAAAC,GACLA,EAAKC,MAAQH,IAAKA,EAAME,EAAKC,UAE7BH,EAGYI,CAAaT,GAIvC,OACC,0BAASU,UAAU,QAAnB,UACU,oBAAIA,UAAU,eAAd,SAA+BT,IACV,IAApBD,EAAUW,OAAc,mBAAGD,UAAU,iBAAb,8FACrB,oBAAIA,UAAU,cAAd,SACSV,EAAUY,KAAI,SAACL,EAAMM,GAClB,OACI,qBAAIH,UAAU,kBAA0BI,MAAO,CAACC,OAAO,GAAD,OAAKR,EAAKC,MAAMN,EAAhB,OAAtD,UAAmFK,EAAKS,KAAxF,IAA+FT,EAAKC,QAA/DK,YC9BxDI,EAAuB,CAChC,CAACD,KAAM,kCAAUR,MAAO,IACxB,CAACQ,KAAM,sBAAQR,MAAO,IACtB,CAACQ,KAAM,4BAASR,MAAO,IACvB,CAACQ,KAAM,4BAASR,MAAO,IACvB,CAACQ,KAAM,kCAAUR,MAAO,IACxB,CAACQ,KAAM,sBAAQR,MAAO,IACtB,CAACQ,KAAM,4BAASR,MAAO,IACvB,CAACQ,KAAM,4BAASR,MAAO,IACvB,CAACQ,KAAM,kCAAUR,MAAO,IACxB,CAACQ,KAAM,uBAASR,MAAO,IACvB,CAACQ,KAAM,6BAAUR,MAAO,IACxB,CAACQ,KAAM,6BAAUR,MAAO,IACxB,CAACQ,KAAM,mCAAWR,MAAO,IACzB,CAACQ,KAAM,uBAASR,MAAO,KAGdU,EAAwB,CACjC,CAACF,KAAM,2BAAQR,MAAO,IACtB,CAACQ,KAAM,2BAAQR,MAAO,IACtB,CAACQ,KAAM,2BAAQR,MAAO,IACtB,CAACQ,KAAM,uCAAUR,MAAO,KAIfW,EAAwB,GCVtBC,EAbO,WAErB,OACC,qBAAKV,UAAU,OAAf,SACC,sBAAKA,UAAU,OAAf,UACC,cAAC,EAAD,CAAaV,UAAWiB,EAAUhB,MAAO,8FAAoBE,oBAAqB,MAClF,cAAC,EAAD,CAAaH,UAAWkB,EAAWjB,MAAO,mIAA2BE,oBAAqB,MAC1F,cAAC,EAAD,CAAaH,UAAWmB,EAAWlB,MAAO,iHAAwBE,oBAAqB,YCE5EkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.744b39c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SimpleChart.css';\r\nimport IPosition from '../../interfaces/IPosition'\r\n\r\ninterface ISimpleChartProps{\r\n    positions: IPosition[];\r\n    title: string;\r\n    maxHeightOfBarsInPx: number;\r\n}\r\n\r\n\r\nconst SimpleChart: React.FC<ISimpleChartProps> = ({positions,title, maxHeightOfBarsInPx}) => {\r\n\r\n\r\n    const findTopScore = (arr: IPosition[]):number =>{\r\n        let res:number = 0\r\n        arr.forEach(item=>{\r\n            if(item.score > res) res = item.score \r\n        })\r\n        return res\r\n    }\r\n\r\n    const topScore:number =findTopScore(positions)\r\n    const ratio:number = maxHeightOfBarsInPx / topScore\r\n\r\n\t\r\n\treturn (\r\n\t\t<section className=\"chart\">\r\n            <h3 className=\"chart__title\" >{title}</h3>\r\n            {positions.length ===0 ? <p className=\"chart__no-data\">Данных пока нет</p> : \r\n                <ul className=\"chart__list\">\r\n                        {positions.map((item, i) => {\r\n                            return (\r\n                                <li className=\"chart__position\" key={i} style={{height: `${item.score*ratio}px`}}>{item.name} {item.score}</li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            }\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default SimpleChart;\r\n","import IPosition from '../interfaces/IPosition'\r\n\r\n\r\nexport const dataLong: IPosition[] =[\r\n    {name: 'Антон1', score: 18}, \r\n    {name: 'Аня2', score: 43},\r\n    {name: 'Саша3', score: 22},\r\n    {name: 'Даша4', score: 66},\r\n    {name: 'Антон5', score: 12}, \r\n    {name: 'Аня6', score: 87},\r\n    {name: 'Саша7', score: 43},\r\n    {name: 'Даша8', score: 51},\r\n    {name: 'Антон9', score: 12}, \r\n    {name: 'Аня10', score: 60},\r\n    {name: 'Саша11', score: 23},\r\n    {name: 'Даша12', score: 32},\r\n    {name: 'Антон13', score: 18}, \r\n    {name: 'Аня14', score: 64}\r\n]\r\n\r\nexport const dataShort: IPosition[] =[\r\n    {name: 'Петя', score: 56}, \r\n    {name: 'Олег', score: 34},\r\n    {name: 'Витя', score: 71},\r\n    {name: 'Сережа', score: 99}\r\n]\r\n\r\n\r\nexport const dataEmpty: IPosition[] =[\r\n   \r\n]\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SimpleChart from '../SimpleChart/SimpleChart';\r\nimport {dataLong, dataShort, dataEmpty} from '../../data/data';\r\n\r\nconst App: React.FC = () => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"root\">\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<SimpleChart positions={dataLong} title={\"Таблица рекордов\"} maxHeightOfBarsInPx={400}/>\r\n\t\t\t\t<SimpleChart positions={dataShort} title={\"Таблица других рекордов\"} maxHeightOfBarsInPx={200}/>\r\n\t\t\t\t<SimpleChart positions={dataEmpty} title={\"Таблица без рекордов\"} maxHeightOfBarsInPx={200}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}